name: 'Continuous Deployment'

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  DOTNET_VERSION: '9.0.x'

jobs:
  validation:
    name: 'Build, Test and Validate'
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Build and Test
        uses: ./.github/actions/build-and-test
        with:
          dotnet-version: '9.0.x'

      - name: Bicep Validation
        uses: ./.github/actions/bicep-validation

  build-and-deploy-dev:
    environment: Development
    runs-on: ubuntu-latest
    needs: [validation]

    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      AZURE_LOCATION: "uksouth"
      AZURE_ENV_NAME: "dev"

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install azd
        run: |
          curl -fsSL https://aka.ms/install-azd.sh | bash
          echo "$HOME/.azd/bin" >> $GITHUB_PATH

      - name: Log in with Azure (Federated Credentials)
        run: |
          azd auth login \
            --client-id "$AZURE_CLIENT_ID" \
            --federated-credential-provider "github" \
            --tenant-id "$AZURE_TENANT_ID"

      - name: Log in with Azure CLI
        uses: azure/login@v2
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: Provision Infrastructure
        run: azd provision --no-prompt

      - name: Get deployment outputs
        id: get-outputs
        run: |
          webAppUrl=$(azd env get-values | grep "^webAppUrl=" | cut -d'=' -f2 | tr -d '"')
          keyVaultName=$(azd env get-values | grep "^keyVaultName=" | cut -d'=' -f2 | tr -d '"')
          echo "WEB_APP_URL=$webAppUrl" >> $GITHUB_OUTPUT
          echo "KEY_VAULT_NAME=$keyVaultName" >> $GITHUB_OUTPUT

      - name: Setup App Registration
        run: |
          pwsh -File scripts/setup-app-registration.ps1 \
            -EnvironmentName "${{ env.AZURE_ENV_NAME }}" \
            -WebAppUrl "${{ steps.get-outputs.outputs.WEB_APP_URL }}" \
            -KeyVaultName "${{ steps.get-outputs.outputs.KEY_VAULT_NAME }}"

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Deploy Application
        run: azd deploy --no-prompt

    outputs:
      web-app-url: ${{ steps.get-outputs.outputs.WEB_APP_URL }}

  ui-test-dev:
    environment: Development
    runs-on: ubuntu-latest

    needs: [build-and-deploy-dev]

    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox]

    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      AZURE_ENV_NAME: "dev"

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Build UI Tests Project
        run: dotnet build src/MX.Skilling.Web.UITests --configuration Release

      - name: Install Playwright Browsers
        run: pwsh src/MX.Skilling.Web.UITests/bin/Release/net9.0/playwright.ps1 install ${{ matrix.browser }}

      - name: Wait for website to be available
        run: |
          echo "Waiting for website to be available at ${{ needs.build-and-deploy-dev.outputs.web-app-url }}"
          for i in {1..6}; do
            if curl -s -o /dev/null -w "%{http_code}" "${{ needs.build-and-deploy-dev.outputs.web-app-url }}" | grep -q "200"; then
              echo "Website is available!"
              break
            else
              echo "Attempt $i: Website not yet available, waiting 10 seconds..."
              sleep 10
            fi
            if [ $i -eq 6 ]; then
              echo "Website failed to become available after 1 minute"
              exit 1
            fi
          done

      - name: Run UI Tests (${{ matrix.browser }})
        run: dotnet test src/MX.Skilling.Web.UITests --configuration Release --no-build --verbosity normal
        env:
          WEB_APP_URL: ${{ needs.build-and-deploy-dev.outputs.web-app-url }}
          PLAYWRIGHT_BROWSER: ${{ matrix.browser }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ui-test-results-dev-${{ matrix.browser }}
          path: |
            **/TestResults/
            **/*.trx
          retention-days: 7

  build-and-deploy-prd:
    environment: Production
    runs-on: ubuntu-latest

    needs: [ui-test-dev]

    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      AZURE_LOCATION: "uksouth"
      AZURE_ENV_NAME: "prd"

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install azd
        run: |
          curl -fsSL https://aka.ms/install-azd.sh | bash
          echo "$HOME/.azd/bin" >> $GITHUB_PATH

      - name: Log in with Azure (Federated Credentials)
        run: |
          azd auth login \
            --client-id "$AZURE_CLIENT_ID" \
            --federated-credential-provider "github" \
            --tenant-id "$AZURE_TENANT_ID"

      - name: Log in with Azure CLI
        uses: azure/login@v2
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: Provision Infrastructure
        run: azd provision --no-prompt

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Get deployment outputs
        id: get-outputs
        run: |
          webAppUrl=$(azd env get-values | grep "^webAppUrl=" | cut -d'=' -f2 | tr -d '"')
          keyVaultName=$(azd env get-values | grep "^keyVaultName=" | cut -d'=' -f2 | tr -d '"')
          echo "WEB_APP_URL=$webAppUrl" >> $GITHUB_OUTPUT
          echo "KEY_VAULT_NAME=$keyVaultName" >> $GITHUB_OUTPUT

      - name: Setup App Registration
        run: |
          pwsh -File scripts/setup-app-registration.ps1 \
            -EnvironmentName "${{ env.AZURE_ENV_NAME }}" \
            -WebAppUrl "${{ steps.get-outputs.outputs.WEB_APP_URL }}" \
            -KeyVaultName "${{ steps.get-outputs.outputs.KEY_VAULT_NAME }}"

      - name: Deploy Application
        run: azd deploy --no-prompt

    outputs:
      web-app-url: ${{ steps.get-outputs.outputs.WEB_APP_URL }}

  ui-test-prd:
    environment: Production
    runs-on: ubuntu-latest

    needs: [build-and-deploy-prd]

    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox]

    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      AZURE_ENV_NAME: "prd"

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Build UI Tests Project
        run: dotnet build src/MX.Skilling.Web.UITests --configuration Release

      - name: Install Playwright Browsers
        run: pwsh src/MX.Skilling.Web.UITests/bin/Release/net9.0/playwright.ps1 install ${{ matrix.browser }}

      - name: Wait for website to be available
        run: |
          echo "Waiting for website to be available at ${{ needs.build-and-deploy-prd.outputs.web-app-url }}"
          for i in {1..6}; do
            if curl -s -o /dev/null -w "%{http_code}" "${{ needs.build-and-deploy-prd.outputs.web-app-url }}" | grep -q "200"; then
              echo "Website is available!"
              break
            else
              echo "Attempt $i: Website not yet available, waiting 10 seconds..."
              sleep 10
            fi
            if [ $i -eq 6 ]; then
              echo "Website failed to become available after 1 minute"
              exit 1
            fi
          done

      - name: Run UI Tests (${{ matrix.browser }})
        run: dotnet test src/MX.Skilling.Web.UITests --configuration Release --no-build --verbosity normal
        env:
          WEB_APP_URL: ${{ needs.build-and-deploy-prd.outputs.web-app-url }}
          PLAYWRIGHT_BROWSER: ${{ matrix.browser }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ui-test-results-prd-${{ matrix.browser }}
          path: |
            **/TestResults/
            **/*.trx
          retention-days: 7
